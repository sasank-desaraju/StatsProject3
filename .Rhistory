ylab("Flanker's Test Unadjusted Score")  +
labs(title = "Highest Academic Degree vs. Flanker's Test") +
theme(plot.title = element_text(size = rel(1.2), hjust = 0.5))
#Ability to Pay Attention vs. Flanker's Test
ggplot(data = hypo_one_dataset, aes(x = Track_Activity, y = Flanker_test,
color = Track_Activity)) +
geom_boxplot(show.legend = FALSE) +
stat_summary(fun.data = mean_se, color = "black") +
xlab("Ability to Pay Attention") +
ylab("Flanker's Test Unadjusted Score")  +
labs(title = "Ability to Pay Attention vs. Flanker's Test") +
theme(plot.title = element_text(size = rel(1.2), hjust = 0.5))
dataset
tidy_dataset <- dataset %>%
rename(ID = record_id,
Flanker_test = tb_flanker_unadj_ss,
Pic_Seq_Mem_Test = tb_picseq_unadj_ss,
Moca_Score = moca_unadj,
Musical_Practice = champs_q17c,
Age = gi_age,
Education_Level = gi_degree,
Second_Language = gi_2ndlang_yn,
Track_Activity = pac_track_doing,
Paying_Attention = pac_pay_attention,
Concentration = pac_concentrate,
Indecisiveness = bdi_indecisiveness,
Remembering = pac_remember,
R_Parahippo_vol = fs_parahpc_vol_r,
L_Parahippo_vol = fs_parahpc_vol_l,
Est_Tot_intra_cranial_vol = fs_etiv
) %>%
mutate(Second_Language = if_else(condition = is.na(Second_Language), "No", "Yes")) %>%
mutate(Musical_Practice = if_else(condition = is.na(Musical_Practice), 0 , Musical_Practice)) %>%
mutate(Musical_Practice = as_factor(Musical_Practice),
Education_Level = as_factor(Education_Level),
Second_Language = as_factor(Second_Language),
Paying_Attention = as_factor(Paying_Attention),
Track_Activity = as_factor(Track_Activity),
Concentration = as_factor(Concentration),
Indecisiveness = as_factor(Indecisiveness),
Remembering = as_factor(Remembering),
Moca_Score = as.numeric(Moca_Score),
Age = as.numeric(Age)
)
tidy_dataset <- dataset %>%
rename(ID = record_id,
Flanker_test = tb_flanker_unadj_ss,
Pic_Seq_Mem_Test = tb_picseq_unadj_ss,
Moca_Score = moca_unadj,
Musical_Practice = champs_q17c,
Age = gi_age,
Education_Level = gi_degree,
Second_Language = gi_2ndlang_yn,
Track_Activity = pac_track_doing,
Paying_Attention = pac_pay_attention,
Concentration = pac_concentrate,
Indecisiveness = bdi_indecisiveness,
Remembering = pac_remember,
R_Parahippo_vol = fs_parahpc_vol_r,
L_Parahippo_vol = fs_parahpc_vol_l,
Est_Tot_intra_cranial_vol = fs_etiv
) %>%
mutate(Second_Language = if_else(condition = is.na(Second_Language), "No", "Yes")) %>%
mutate(Musical_Practice = if_else(condition = is.na(Musical_Practice), 0 , 1)) %>%
mutate(Musical_Practice = as_factor(Musical_Practice),
Education_Level = as_factor(Education_Level),
Second_Language = as_factor(Second_Language),
Paying_Attention = as_factor(Paying_Attention),
Track_Activity = as_factor(Track_Activity),
Concentration = as_factor(Concentration),
Indecisiveness = as_factor(Indecisiveness),
Remembering = as_factor(Remembering),
Moca_Score = as.numeric(Moca_Score),
Age = as.numeric(Age)
)
tidy_dataset
tidy_dataset <- dataset %>%
rename(ID = record_id,
Flanker_test = tb_flanker_unadj_ss,
Pic_Seq_Mem_Test = tb_picseq_unadj_ss,
Moca_Score = moca_unadj,
Musical_Practice = champs_q17c,
Age = gi_age,
Education_Level = gi_degree,
Second_Language = gi_2ndlang_yn,
Track_Activity = pac_track_doing,
Paying_Attention = pac_pay_attention,
Concentration = pac_concentrate,
Indecisiveness = bdi_indecisiveness,
Remembering = pac_remember,
R_Parahippo_vol = fs_parahpc_vol_r,
L_Parahippo_vol = fs_parahpc_vol_l,
Est_Tot_intra_cranial_vol = fs_etiv
) %>%
mutate(Second_Language = if_else(condition = is.na(Second_Language), "No", "Yes")) %>%
mutate(Musical_Practice = if_else(condition = is.na(Musical_Practice), 0 , Musical_Practice)) %>%
mutate(Musical_Practice = as_factor(Musical_Practice),
Education_Level = as_factor(Education_Level),
Second_Language = as_factor(Second_Language),
Paying_Attention = as_factor(Paying_Attention),
Track_Activity = as_factor(Track_Activity),
Concentration = as_factor(Concentration),
Indecisiveness = as_factor(Indecisiveness),
Remembering = as_factor(Remembering),
Moca_Score = as.numeric(Moca_Score),
Age = as.numeric(Age)
)
tidy_dataset <- dataset %>%
rename(ID = record_id,
Flanker_test = tb_flanker_unadj_ss,
Pic_Seq_Mem_Test = tb_picseq_unadj_ss,
Moca_Score = moca_unadj,
Musical_Practice = champs_q17c,
Age = gi_age,
Education_Level = gi_degree,
Second_Language = gi_2ndlang_yn,
Track_Activity = pac_track_doing,
Paying_Attention = pac_pay_attention,
Concentration = pac_concentrate,
Indecisiveness = bdi_indecisiveness,
Remembering = pac_remember,
R_Parahippo_vol = fs_parahpc_vol_r,
L_Parahippo_vol = fs_parahpc_vol_l,
Est_Tot_intra_cranial_vol = fs_etiv
) %>%
mutate(Second_Language = if_else(condition = is.na(Second_Language), "No", "Yes")) %>%
mutate(Musical_Practice = if_else(condition = is.na(Musical_Practice), 0 , as.numeric(Musical_Practice))) %>%
mutate(Musical_Practice = as_factor(Musical_Practice),
Education_Level = as_factor(Education_Level),
Second_Language = as_factor(Second_Language),
Paying_Attention = as_factor(Paying_Attention),
Track_Activity = as_factor(Track_Activity),
Concentration = as_factor(Concentration),
Indecisiveness = as_factor(Indecisiveness),
Remembering = as_factor(Remembering),
Moca_Score = as.numeric(Moca_Score),
Age = as.numeric(Age)
)
tidy_dataset
#Model Construction
hypo1_model_1 <- lm(data = hypo_one_dataset, Flanker_test ~ Track_Activity + Age + Second_Language + Education_Level + Musical_Practice)
hypo1_model_2 <- lm(data = hypo_one_dataset, Flanker_test ~ Musical_Practice + Age + Second_Language + Education_Level)
#Model Construction
hypo1_model_1 <- lm(data = hypo_one_dataset, Flanker_test ~ Track_Activity + Age + Second_Language + Education_Level + Musical_Practice)
hypo1_model_2 <- lm(data = hypo_one_dataset, Flanker_test ~ Musical_Practice + Age + Second_Language + Education_Level)
#Model Construction
hypo1_model_1 <- lm(data = hypo_one_dataset, Flanker_test ~ Track_Activity + Age + Second_Language + Education_Level)
tidy_dataset <- dataset %>%
rename(ID = record_id,
Flanker_test = tb_flanker_unadj_ss,
Pic_Seq_Mem_Test = tb_picseq_unadj_ss,
Moca_Score = moca_unadj,
Musical_Practice = champs_q17c,
Age = gi_age,
Education_Level = gi_degree,
Second_Language = gi_2ndlang_yn,
Track_Activity = pac_track_doing,
Paying_Attention = pac_pay_attention,
Concentration = pac_concentrate,
Indecisiveness = bdi_indecisiveness,
Remembering = pac_remember,
R_Parahippo_vol = fs_parahpc_vol_r,
L_Parahippo_vol = fs_parahpc_vol_l,
Est_Tot_intra_cranial_vol = fs_etiv
) %>%
mutate(Second_Language = if_else(condition = is.na(Second_Language), "No", "Yes")) %>%
mutate(Musical_Practice = if_else(condition = is.na(Musical_Practice), 0 , as.numeric(Musical_Practice))) %>%
mutate(Musical_Practice = if_else(condition = is.na(Track_Activity), 0 , as.numeric(Track_Activity))) %>%
mutate(Musical_Practice = as_factor(Musical_Practice),
Education_Level = as_factor(Education_Level),
Second_Language = as_factor(Second_Language),
Paying_Attention = as_factor(Paying_Attention),
Track_Activity = as_factor(Track_Activity),
Concentration = as_factor(Concentration),
Indecisiveness = as_factor(Indecisiveness),
Remembering = as_factor(Remembering),
Moca_Score = as.numeric(Moca_Score),
Age = as.numeric(Age)
)
#Model Construction
hypo1_model_1 <- lm(data = hypo_one_dataset, Flanker_test ~ Track_Activity + Age + Second_Language + Education_Level)
#Model Construction
hypo1_model_1 <- lm(data = hypo_one_dataset, Flanker_test ~ Track_Activity + Age + Second_Language + Education_Level + Musical_Practical)
#Model Construction
hypo1_model_1 <- lm(data = hypo_one_dataset, Flanker_test ~ Track_Activity + Age + Second_Language + Education_Level + Musical_Practice)
hypo_one_dataset <- tidy_dataset %>%
select(ID,
Flanker_test,
Age,
Musical_Practice,
Second_Language,
Education_Level,
Track_Activity
)
hypo_one_dataset
#Model Construction
hypo1_model_1 <- lm(data = hypo_one_dataset, Flanker_test ~ Track_Activity + Age + Second_Language + Education_Level + Musical_Practice)
hypo1_model_2 <- lm(data = hypo_one_dataset, Flanker_test ~ Musical_Practice + Age + Second_Language + Education_Level)
#Analysis and Comparison
kable(tidy(hypo1_model_2), digits = 3)
kable(tidy(Anova(hypo1_model_2, type = 2, alpha = 0.05)), digits = 3)
AIC(hypo1_model_1, hypo1_model_2)
hypo_one_dataset <- tidy_dataset %>%
select(ID,
Flanker_test,
Age,
Musical_Practice,
Second_Language,
Education_Level,
Track_Activity
)
hypo_one_dataset
hypo_one_dataset <- tidy_dataset %>%
select(ID,
Flanker_test,
Age,
Musical_Practice,
Second_Language,
Education_Level,
Track_Activity
)
hypo_one_dataset
dataset <- readRDS("./data/group3_data.rds")
tidy_dataset <- dataset %>%
rename(ID = record_id,
Flanker_test = tb_flanker_unadj_ss,
Pic_Seq_Mem_Test = tb_picseq_unadj_ss,
Moca_Score = moca_unadj,
Musical_Practice = champs_q17c,
Age = gi_age,
Education_Level = gi_degree,
Second_Language = gi_2ndlang_yn,
Track_Activity = pac_track_doing,
Paying_Attention = pac_pay_attention,
Concentration = pac_concentrate,
Indecisiveness = bdi_indecisiveness,
Remembering = pac_remember,
R_Parahippo_vol = fs_parahpc_vol_r,
L_Parahippo_vol = fs_parahpc_vol_l,
Est_Tot_intra_cranial_vol = fs_etiv
) %>%
mutate(Second_Language = if_else(condition = is.na(Second_Language), "No", "Yes")) %>%
# mutate(Musical_Practice = if_else(condition = is.na(Musical_Practice), 0 , as.numeric(Musical_Practice))) %>%
# mutate(Musical_Practice = if_else(condition = is.na(Track_Activity), 0 , as.numeric(Track_Activity))) %>%
mutate(Musical_Practice = as_factor(Musical_Practice),
Education_Level = as_factor(Education_Level),
Second_Language = as_factor(Second_Language),
Paying_Attention = as_factor(Paying_Attention),
Track_Activity = as_factor(Track_Activity),
Concentration = as_factor(Concentration),
Indecisiveness = as_factor(Indecisiveness),
Remembering = as_factor(Remembering),
Moca_Score = as.numeric(Moca_Score),
Age = as.numeric(Age)
)
dataset
tidy_dataset
hypo_one_dataset <- tidy_dataset %>%
select(ID,
Flanker_test,
Age,
Musical_Practice,
Second_Language,
Education_Level,
Track_Activity
)
hypo_one_dataset
#Model Construction
hypo1_model_1 <- lm(data = hypo_one_dataset, Flanker_test ~ Track_Activity + Age + Second_Language + Education_Level + Musical_Practice)
hypo1_model_2 <- lm(data = hypo_one_dataset, Flanker_test ~ Musical_Practice + Age + Second_Language + Education_Level)
dataset <- readRDS("./data/group3_data.rds")
tidy_dataset <- dataset %>%
rename(ID = record_id,
Flanker_test = tb_flanker_unadj_ss,
Pic_Seq_Mem_Test = tb_picseq_unadj_ss,
Moca_Score = moca_unadj,
Musical_Practice = champs_q17c,
Age = gi_age,
Education_Level = gi_degree,
Second_Language = gi_2ndlang_yn,
Track_Activity = pac_track_doing,
Paying_Attention = pac_pay_attention,
Concentration = pac_concentrate,
Indecisiveness = bdi_indecisiveness,
Remembering = pac_remember,
R_Parahippo_vol = fs_parahpc_vol_r,
L_Parahippo_vol = fs_parahpc_vol_l,
Est_Tot_intra_cranial_vol = fs_etiv
) %>%
mutate(Second_Language = if_else(condition = is.na(Second_Language), "No", "Yes")) %>%
mutate(Musical_Practice = if_else(condition = is.na(Musical_Practice), 0 , as.numeric(Musical_Practice))) %>%
# mutate(Musical_Practice = if_else(condition = is.na(Track_Activity), 0 , as.numeric(Track_Activity))) %>%
mutate(Musical_Practice = as_factor(Musical_Practice),
Education_Level = as_factor(Education_Level),
Second_Language = as_factor(Second_Language),
Paying_Attention = as_factor(Paying_Attention),
Track_Activity = as_factor(Track_Activity),
Concentration = as_factor(Concentration),
Indecisiveness = as_factor(Indecisiveness),
Remembering = as_factor(Remembering),
Moca_Score = as.numeric(Moca_Score),
Age = as.numeric(Age)
)
dataset
tidy_dataset
hypo_one_dataset <- tidy_dataset %>%
select(ID,
Flanker_test,
Age,
Musical_Practice,
Second_Language,
Education_Level,
Track_Activity
)
hypo_one_dataset
#Model Construction
hypo1_model_1 <- lm(data = hypo_one_dataset, Flanker_test ~ Track_Activity + Age + Second_Language + Education_Level + Musical_Practice)
#Model Construction
hypo1_model_1 <- lm(data = hypo_one_dataset, Flanker_test ~ Track_Activity + Age + Second_Language + Education_Level + Musical_Practice)
hypo_one_dataset <- tidy_dataset %>%
select(ID,
Flanker_test,
Age,
Musical_Practice,
Second_Language,
Education_Level,
Track_Activity
)
hypo_one_dataset
#Model Construction
hypo1_model_1 <- lm(data = hypo_one_dataset, Flanker_test ~ Track_Activity + Age + Second_Language + Education_Level + Musical_Practice)
dataset <- readRDS("./data/group3_data.rds")
tidy_dataset <- dataset %>%
rename(ID = record_id,
Flanker_test = tb_flanker_unadj_ss,
Pic_Seq_Mem_Test = tb_picseq_unadj_ss,
Moca_Score = moca_unadj,
Musical_Practice = champs_q17c,
Age = gi_age,
Education_Level = gi_degree,
Second_Language = gi_2ndlang_yn,
Track_Activity = pac_track_doing,
Paying_Attention = pac_pay_attention,
Concentration = pac_concentrate,
Indecisiveness = bdi_indecisiveness,
Remembering = pac_remember,
R_Parahippo_vol = fs_parahpc_vol_r,
L_Parahippo_vol = fs_parahpc_vol_l,
Est_Tot_intra_cranial_vol = fs_etiv
) %>%
mutate(Second_Language = if_else(condition = is.na(Second_Language), "No", "Yes")) %>%
mutate(Musical_Practice = if_else(condition = is.na(Musical_Practice), 0 , as.numeric(Musical_Practice))) %>%
mutate(Musical_Practice = if_else(condition = is.na(Track_Activity), 0 , as.numeric(Track_Activity))) %>%
mutate(Musical_Practice = as_factor(Musical_Practice),
Education_Level = as_factor(Education_Level),
Second_Language = as_factor(Second_Language),
Paying_Attention = as_factor(Paying_Attention),
Track_Activity = as_factor(Track_Activity),
Concentration = as_factor(Concentration),
Indecisiveness = as_factor(Indecisiveness),
Remembering = as_factor(Remembering),
Moca_Score = as.numeric(Moca_Score),
Age = as.numeric(Age)
)
dataset
tidy_dataset
hypo_one_dataset <- tidy_dataset %>%
select(ID,
Flanker_test,
Age,
Musical_Practice,
Second_Language,
Education_Level,
Track_Activity
)
hypo_one_dataset
#Age vs. Flanker's Test
ggplot(data = hypo_one_dataset, aes(x = Age,
y = Flanker_test)) +
geom_point() +
geom_smooth(method = lm, formula = `y` ~ `x`, se = F) +
xlab("Age") +
ylab("Flanker's Test Unadjusted Score") +
labs(title = "Age vs. Flanker's Test") +
theme(plot.title = element_text(size = rel(1.2), hjust = 0.5))
#Musical Practice vs. Flanker's Test
ggplot(data = hypo_one_dataset, aes(x = Musical_Practice, y = Flanker_test,
color = Musical_Practice)) +
geom_boxplot(show.legend = FALSE) +
stat_summary(fun.data = mean_se, color = "black") +
xlab("Musical Practice (Total Hrs per Week") +
ylab("Flanker's Test Unadjusted Score")  +
labs(title = "Musical Practice vs. Flanker's Test") +
theme(plot.title = element_text(size = rel(1.2), hjust = 0.5))
#Second Language vs. Flanker's Test
ggplot(data = hypo_one_dataset, aes(x = Second_Language, y = Flanker_test,
color = Second_Language)) +
geom_boxplot(show.legend = FALSE) +
stat_summary(fun.data = mean_se, color = "green") +
geom_dotplot(binaxis = "y",stackdir = "center", binwidth = 0.8) +
xlab("Second Language(s)") +
ylab("Flanker's Test Unadjusted Score")  +
labs(title = "Second Language(s) vs. Flanker's Test") +
theme(plot.title = element_text(size = rel(1.2), hjust = 0.5))
#Education Level vs. Flanker's Test
ggplot(data = hypo_one_dataset, aes(x = Education_Level, y = Flanker_test,
color = Education_Level)) +
geom_boxplot(show.legend = FALSE) +
stat_summary(fun.data = mean_se, color = "black") +
xlab("Highest Academic Degree") +
ylab("Flanker's Test Unadjusted Score")  +
labs(title = "Highest Academic Degree vs. Flanker's Test") +
theme(plot.title = element_text(size = rel(1.2), hjust = 0.5))
#Ability to Pay Attention vs. Flanker's Test
ggplot(data = hypo_one_dataset, aes(x = Track_Activity, y = Flanker_test,
color = Track_Activity)) +
geom_boxplot(show.legend = FALSE) +
stat_summary(fun.data = mean_se, color = "black") +
xlab("Ability to Pay Attention") +
ylab("Flanker's Test Unadjusted Score")  +
labs(title = "Ability to Pay Attention vs. Flanker's Test") +
theme(plot.title = element_text(size = rel(1.2), hjust = 0.5))
#Model Construction
hypo1_model_1 <- lm(data = hypo_one_dataset, Flanker_test ~ Track_Activity + Age + Second_Language + Education_Level + Musical_Practice)
hypo1_model_2 <- lm(data = hypo_one_dataset, Flanker_test ~ Musical_Practice + Age + Second_Language + Education_Level)
#Analysis and Comparison
kable(tidy(hypo1_model_2), digits = 3)
kable(tidy(Anova(hypo1_model_2, type = 2, alpha = 0.05)), digits = 3)
AIC(hypo1_model_1, hypo1_model_2)
# Use augment to add fitted values and residuals to model data
hypo1_model_2_aug <- augment(hypo1_model_2)
# Plot the residuals against the values fitted by the model.
ggplot(hypo1_model_2_aug, aes(.fitted, .resid))+
geom_point()
# Plot the studentized residuals against the fitted values.
ggplot(hypo1_model_2_aug, aes(.fitted, .std.resid))+
geom_point()+
geom_smooth(method = loess, formula = `y` ~ `x`, se = F)+
geom_smooth(method=lm, formula = `y` ~ `x`)+
geom_hline(yintercept = c(-2, 2), linetype=2, size=0.5)
# QQ Plot
ggplot(hypo1_model_2_aug, aes(sample=.std.resid))+
stat_qq()+
stat_qq_line()+
geom_abline(slope=1, intercept=0, linetype=2)
hat_avg_model_2 = (4+1)/nrow(hypo1_model_2_aug)
# look at resid vs hat values
# hypo1_model_2_aug %>%
#   pivot_longer(cols = c(.std.resid, .resid)) %>%
#   ggplot(aes(.hat, value))+
#   facet_wrap(vars(name))+
#   geom_point()+
#   # Line marking average hat value
#   geom_vline(xintercept = hat_avg_model_2, linetype = 2)+
#   # Line marking 2*average hat value
#   geom_vline(xintercept = 2 * hat_avg_model_2, linetype = 2, color="orange")+
#   # Line marking 3*average hat value
#   geom_vline(xintercept = 3 * hat_avg_model_2, linetype = 2, color="red")+
#   theme_bw()
#Cooks Distance:
hypo1_model_2_aug %>%
ggplot( aes(.hat, .std.resid, size=.cooksd))+
geom_point(shape = 1)+
geom_vline(xintercept = hat_avg_model_2, linetype = 2)+
geom_vline(xintercept = 2 * hat_avg_model_2, linetype = 2, color="orange")+
geom_vline(xintercept = 3 * hat_avg_model_2, linetype = 2, color="red")+
geom_hline(yintercept = c(-2, 2), linetype = 2)+
geom_text(aes(label=if_else(.hat>2*hat_avg_model_2 |.cooksd>=(2/sqrt(nrow(hypo1_model_2_aug))),
paste0("(",Musical_Practice, ", ", Flanker_test, ")"), "")), nudge_y = 0.2, size=4)+
theme_bw()
hypo1_model_2_aug
hypo_two_dataset <- tidy_dataset %>%
select(ID,
Pic_Seq_Mem_Test,
Age,
Musical_Practice,
R_Parahippo_vol,
L_Parahippo_vol,
Est_Tot_intra_cranial_vol,
Second_Language,
Education_Level,
Remembering
) %>%
mutate(Parahippo_vol =
(R_Parahippo_vol + L_Parahippo_vol) / Est_Tot_intra_cranial_vol)
# Total parahippocampal volume (PHC) is calculated as the sum of the left and right parahippocampal volumes, normalized to estimated total intracranial volume (PHC = (fs_parahpc_vol_l + fs_parahpc_vol_r) / (fs_etiv))
hypo_two_dataset
### TODO : description of Parahippo_vol in tibble is 'Right Parahippocal Volume', therefore need to fix ( " data.frame(Parahippo_vol, description = "Parahippocampal Volume as Fraction of Total Intracranial Volume") " ?)
#Age vs. Picture Sequence Memory Test
ggplot(data = hypo_two_dataset, aes(x = Age,
y = Pic_Seq_Mem_Test)) +
geom_point() +
geom_smooth(method = lm, formula = `y` ~ `x`, se = F) +
ylab("Picture Sequence Memory Test Score") +
theme_bw()
#Musical Practice vs. Picture Sequence Memory Test
ggplot(data = hypo_two_dataset %>% filter(!is.na(Musical_Practice)), aes(x = Musical_Practice, y = Pic_Seq_Mem_Test,
color=factor(Musical_Practice,labels=c("Less than 1 hour","1-2.5 hours","3-4.5 hours","5-6.5 hours")))) +
geom_boxplot(show.legend = FALSE) +
stat_summary(fun.data = mean_se, color = "black") +
scale_x_discrete(labels=c("Less than 1 hour","1-2.5 hours","3-4.5 hours","5-6.5 hours")) +
xlab("Musical Practice") +
ylab("Picture Sequence Memory Test Score") +
labs(color='Musical Practice') +
theme_bw()
#Model Construction
hypo1_model_1 <- lm(data = hypo_one_dataset, Flanker_test ~ Track_Activity + Age + Second_Language + Education_Level + Musical_Practice)
hypo1_model_2 <- lm(data = hypo_one_dataset, Flanker_test ~ Musical_Practice + Age + Second_Language + Education_Level)
#Analysis and Comparison
kable(tidy(hypo1_model_1), digits = 3)
kable(tidy(Anova(hypo1_model_1, type = 2, alpha = 0.05)), digits = 3)
AIC(hypo1_model_1, hypo1_model_2)
